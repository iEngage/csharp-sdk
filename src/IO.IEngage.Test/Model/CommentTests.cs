/* 
 * Stakeholder engagement API
 *
 * This API enables Intelligent Engagement for your Business. iEngage is a platform that combines process, augmented intelligence and rewards to help you intelligently engage customers.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.IEngage.Api;
using IO.IEngage.Model;
using IO.IEngage.Client;
using System.Reflection;

namespace IO.IEngage.Test
{
    /// <summary>
    ///  Class for testing Comment
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class CommentTests
    {
        // TODO uncomment below to declare an instance variable for Comment
        //private Comment instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Comment
            //instance = new Comment();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Comment
        /// </summary>
        [Test]
        public void CommentInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Comment
            //Assert.IsInstanceOfType<Comment> (instance, "variable 'instance' is a Comment");
        }

        /// <summary>
        /// Test the property 'CommentId'
        /// </summary>
        [Test]
        public void CommentIdTest()
        {
            // TODO unit test for the property 'CommentId'
        }
        /// <summary>
        /// Test the property 'Commentor'
        /// </summary>
        [Test]
        public void CommentorTest()
        {
            // TODO unit test for the property 'Commentor'
        }
        /// <summary>
        /// Test the property 'CommentText'
        /// </summary>
        [Test]
        public void CommentTextTest()
        {
            // TODO unit test for the property 'CommentText'
        }
        /// <summary>
        /// Test the property 'CommentTime'
        /// </summary>
        [Test]
        public void CommentTimeTest()
        {
            // TODO unit test for the property 'CommentTime'
        }

    }

}
