/* 
 * Stakeholder engagement API
 *
 * This API enables Intelligent Engagement for your Business. iEngage is a platform that combines process, augmented intelligence and rewards to help you intelligently engage customers.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.IEngage.Api;
using IO.IEngage.Model;
using IO.IEngage.Client;
using System.Reflection;

namespace IO.IEngage.Test
{
    /// <summary>
    ///  Class for testing User
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class UserTests
    {
        // TODO uncomment below to declare an instance variable for User
        //private User instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of User
            //instance = new User();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of User
        /// </summary>
        [Test]
        public void UserInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" User
            //Assert.IsInstanceOfType<User> (instance, "variable 'instance' is a User");
        }

        /// <summary>
        /// Test the property 'UserId'
        /// </summary>
        [Test]
        public void UserIdTest()
        {
            // TODO unit test for the property 'UserId'
        }
        /// <summary>
        /// Test the property 'FirstName'
        /// </summary>
        [Test]
        public void FirstNameTest()
        {
            // TODO unit test for the property 'FirstName'
        }
        /// <summary>
        /// Test the property 'LastName'
        /// </summary>
        [Test]
        public void LastNameTest()
        {
            // TODO unit test for the property 'LastName'
        }
        /// <summary>
        /// Test the property 'EmailId'
        /// </summary>
        [Test]
        public void EmailIdTest()
        {
            // TODO unit test for the property 'EmailId'
        }
        /// <summary>
        /// Test the property 'ProfileImage'
        /// </summary>
        [Test]
        public void ProfileImageTest()
        {
            // TODO unit test for the property 'ProfileImage'
        }
        /// <summary>
        /// Test the property 'HasInterestUpdated'
        /// </summary>
        [Test]
        public void HasInterestUpdatedTest()
        {
            // TODO unit test for the property 'HasInterestUpdated'
        }
        /// <summary>
        /// Test the property 'BirthDate'
        /// </summary>
        [Test]
        public void BirthDateTest()
        {
            // TODO unit test for the property 'BirthDate'
        }
        /// <summary>
        /// Test the property 'AccessToken'
        /// </summary>
        [Test]
        public void AccessTokenTest()
        {
            // TODO unit test for the property 'AccessToken'
        }
        /// <summary>
        /// Test the property 'CurrentUserFollowing'
        /// </summary>
        [Test]
        public void CurrentUserFollowingTest()
        {
            // TODO unit test for the property 'CurrentUserFollowing'
        }
        /// <summary>
        /// Test the property 'CurrentUserFriend'
        /// </summary>
        [Test]
        public void CurrentUserFriendTest()
        {
            // TODO unit test for the property 'CurrentUserFriend'
        }
        /// <summary>
        /// Test the property 'EquityScore'
        /// </summary>
        [Test]
        public void EquityScoreTest()
        {
            // TODO unit test for the property 'EquityScore'
        }
        /// <summary>
        /// Test the property 'ExtraData'
        /// </summary>
        [Test]
        public void ExtraDataTest()
        {
            // TODO unit test for the property 'ExtraData'
        }

    }

}
