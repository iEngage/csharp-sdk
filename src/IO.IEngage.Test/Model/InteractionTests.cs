/* 
 * iEngage 2.0 API
 *
 * This API enables Intelligent Engagement for your Business. iEngage is a platform that combines process, augmented intelligence and rewards to help you intelligently engage customers.
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.IEngage.Api;
using IO.IEngage.Model;
using IO.IEngage.Client;
using System.Reflection;

namespace IO.IEngage.Test
{
    /// <summary>
    ///  Class for testing Interaction
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class InteractionTests
    {
        // TODO uncomment below to declare an instance variable for Interaction
        //private Interaction instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Interaction
            //instance = new Interaction();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Interaction
        /// </summary>
        [Test]
        public void InteractionInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Interaction
            //Assert.IsInstanceOfType<Interaction> (instance, "variable 'instance' is a Interaction");
        }

        /// <summary>
        /// Test the property 'InteractionId'
        /// </summary>
        [Test]
        public void InteractionIdTest()
        {
            // TODO unit test for the property 'InteractionId'
        }
        /// <summary>
        /// Test the property 'InteractionTitle'
        /// </summary>
        [Test]
        public void InteractionTitleTest()
        {
            // TODO unit test for the property 'InteractionTitle'
        }
        /// <summary>
        /// Test the property 'InteractionDescription'
        /// </summary>
        [Test]
        public void InteractionDescriptionTest()
        {
            // TODO unit test for the property 'InteractionDescription'
        }
        /// <summary>
        /// Test the property 'InteractionType'
        /// </summary>
        [Test]
        public void InteractionTypeTest()
        {
            // TODO unit test for the property 'InteractionType'
        }
        /// <summary>
        /// Test the property 'Issuer'
        /// </summary>
        [Test]
        public void IssuerTest()
        {
            // TODO unit test for the property 'Issuer'
        }
        /// <summary>
        /// Test the property 'NoOfResponses'
        /// </summary>
        [Test]
        public void NoOfResponsesTest()
        {
            // TODO unit test for the property 'NoOfResponses'
        }
        /// <summary>
        /// Test the property 'IsClosed'
        /// </summary>
        [Test]
        public void IsClosedTest()
        {
            // TODO unit test for the property 'IsClosed'
        }
        /// <summary>
        /// Test the property 'CreatedDate'
        /// </summary>
        [Test]
        public void CreatedDateTest()
        {
            // TODO unit test for the property 'CreatedDate'
        }
        /// <summary>
        /// Test the property 'LastUpdatedDate'
        /// </summary>
        [Test]
        public void LastUpdatedDateTest()
        {
            // TODO unit test for the property 'LastUpdatedDate'
        }
        /// <summary>
        /// Test the property 'Association'
        /// </summary>
        [Test]
        public void AssociationTest()
        {
            // TODO unit test for the property 'Association'
        }
        /// <summary>
        /// Test the property 'VideoId'
        /// </summary>
        [Test]
        public void VideoIdTest()
        {
            // TODO unit test for the property 'VideoId'
        }
        /// <summary>
        /// Test the property 'FileURL'
        /// </summary>
        [Test]
        public void FileURLTest()
        {
            // TODO unit test for the property 'FileURL'
        }
        /// <summary>
        /// Test the property 'FileEntityName'
        /// </summary>
        [Test]
        public void FileEntityNameTest()
        {
            // TODO unit test for the property 'FileEntityName'
        }
        /// <summary>
        /// Test the property 'IsSubscribed'
        /// </summary>
        [Test]
        public void IsSubscribedTest()
        {
            // TODO unit test for the property 'IsSubscribed'
        }
        /// <summary>
        /// Test the property 'Sentiment'
        /// </summary>
        [Test]
        public void SentimentTest()
        {
            // TODO unit test for the property 'Sentiment'
        }
        /// <summary>
        /// Test the property 'SentimentDetails'
        /// </summary>
        [Test]
        public void SentimentDetailsTest()
        {
            // TODO unit test for the property 'SentimentDetails'
        }
        /// <summary>
        /// Test the property 'SentimentWeightage'
        /// </summary>
        [Test]
        public void SentimentWeightageTest()
        {
            // TODO unit test for the property 'SentimentWeightage'
        }
        /// <summary>
        /// Test the property 'Entity'
        /// </summary>
        [Test]
        public void EntityTest()
        {
            // TODO unit test for the property 'Entity'
        }
        /// <summary>
        /// Test the property 'AttachmentList'
        /// </summary>
        [Test]
        public void AttachmentListTest()
        {
            // TODO unit test for the property 'AttachmentList'
        }
        /// <summary>
        /// Test the property 'CategoryId'
        /// </summary>
        [Test]
        public void CategoryIdTest()
        {
            // TODO unit test for the property 'CategoryId'
        }
        /// <summary>
        /// Test the property 'CategoryName'
        /// </summary>
        [Test]
        public void CategoryNameTest()
        {
            // TODO unit test for the property 'CategoryName'
        }
        /// <summary>
        /// Test the property 'Score'
        /// </summary>
        [Test]
        public void ScoreTest()
        {
            // TODO unit test for the property 'Score'
        }

    }

}
